From 1da64544e2005f3fb243b55d16c3479921946e81 Mon Sep 17 00:00:00 2001
From: Chris Feist <cfeist@redhat.com>
Date: Wed, 27 Nov 2013 16:00:39 -0600
Subject: [PATCH] Added ability to create/remove uidgid entries

Resolves: rhbz#1025053
---
 ricci/ccs/ccs                       | 78 ++++++++++++++++++++++++++++++++++++-
 ricci/ccs/ccs.8                     |  4 ++
 ricci/ccs/unit_tests/fence.conf.end |  2 +-
 ricci/ccs/unit_tests/misc.conf.end  |  8 +++-
 ricci/ccs/unit_tests/unittest.pl    | 17 ++++++++
 5 files changed, 106 insertions(+), 3 deletions(-)

diff --git a/ricci/ccs/ccs b/ricci/ccs/ccs
index 7e8bd0c..5406697 100755
--- a/ricci/ccs/ccs
+++ b/ricci/ccs/ccs
@@ -76,6 +76,7 @@ def main(argv):
     removeservice = removesubservice = removeresource = False
     listquorum = setquorumd = addheuristic = removeheuristic = False
     settotem = setrm = setcman = setfencedaemon = False
+    setuidgid = rmuidgid = False
     setlogging = addlogging = removelogging = False
     addvm = removevm = False
     listmisc = False
@@ -100,7 +101,7 @@ def main(argv):
       "votes=", "rmfailoverdomainnode=", "setdlm", "rmheuristic", "startall", "stopall", "activate",
       "setconf", "lsquorum", "lsfailoverdomain", "lsmisc", "checkconf", "exp=", "exprm=", "addunfenceinst=",
       "rmunfenceinst=","addvm=","rmvm=", "lsfenceopts", "lsserviceopts", "getschema", "ignore", "debug",
-      "setaltmulticast","addalt=", "rmalt=","lsresourceopts","nounfence"])
+      "setaltmulticast","addalt=", "rmalt=","lsresourceopts","nounfence","setuidgid","rmuidgid"])
     except getopt.GetoptError:
         usage()
         sys.exit(2)
@@ -230,6 +231,8 @@ def main(argv):
         elif opt in ("--rmheuristic"): removeheuristic = True; options = args
         elif opt in ("--lsmisc"): listmisc = True
         elif opt in ("--settotem"): settotem = True; options = args
+        elif opt in ("--setuidgid"): setuidgid = True; options = args
+        elif opt in ("--rmuidgid"): rmuidgid = True; options = args
         elif opt in ("--setrm"): setrm = True; options = args
         elif opt in ("--setcman"): setcman = True; options = args
         elif opt in ("--setdlm"): setdlm = True; options = args
@@ -300,6 +303,8 @@ def main(argv):
     if (removeheuristic): remove_heuristic(options)
     if (listmisc): list_misc()
     if (settotem): set_totem(options)
+    if (setuidgid): set_uidgid(options)
+    if (rmuidgid): rm_uidgid(options)
     if (setrm): set_rm(options)
     if (setcman): set_cman(options)
     if (setdlm): set_dlm(options)
@@ -481,6 +486,10 @@ Misc Options
       --lsmisc          List all of the misc options
       --settotem [totem options]
                         Set totem options
+      --setuidgid uid=<uid> gid=<gid>
+      			Set uidgid options
+      --rmuidgid uid=<uid> gid=<gid>
+      			Remove uidgid entry matching specified uid/gid
       --setdlm [dlm options]
                         Set dlm options
       --setrm [resource manager options]
@@ -1851,6 +1860,7 @@ def list_misc():
     list_tag(dom, "fence_daemon", "Fence Daemon")
     list_tag(dom, "logging", "Logging")
     list_tag(dom, "logging_daemon", "  Logging Daemons")
+    list_tag(dom, "uidgid", "UID/GID")
 
 def set_totem(options):
     dom = minidom.parseString(get_cluster_conf_xml())
@@ -1871,6 +1881,72 @@ def set_totem(options):
     totem = set_element_attributes(totem, options)
     set_cluster_conf(dom.toxml())
 
+def set_uidgid(options):
+    dom = minidom.parseString(get_cluster_conf_xml())
+
+    current_uidgids = dom.getElementsByTagName("uidgid")
+    uidgid = dom.getElementsByTagName('cluster')[0].appendChild(dom.createElement("uidgid"))
+    attributes_set = False
+    for opt in options:
+	if opt.find('=') == -1:
+	    print "Error: --setuidgid options must be of the form uid=<uid> gid=<gid>"
+	    sys.exit(1)
+	(k,v) = opt.split('=',1)
+	if k != "uid" and k != "gid":
+	    print "Error: --setuidgid options must be of the form uid=<uid> gid=<gid>"
+	    sys.exit(1)
+	uidgid.setAttribute(k,v)
+	attributes_set = True
+    if not attributes_set:
+	print "Error: you must set either gid or uid"
+	sys.exit(1)
+
+# Check to make sure we're not duplicating an already existing item
+    for ug in current_uidgids:
+	if ug.getAttribute("uid") == uidgid.getAttribute("uid") and ug.getAttribute("gid") == uidgid.getAttribute("gid"):
+	    print "Error: uidgid entry already exists with uid=%s, gid=%s" % (ug.getAttribute("uid"),ug.getAttribute("gid"))
+	    sys.exit(1)
+
+    set_cluster_conf(dom.toxml())
+	
+def rm_uidgid(options):
+    dom = minidom.parseString(get_cluster_conf_xml())
+
+    uidgids = dom.getElementsByTagName('uidgid')
+    if len(uidgids) == 0:
+      print "Error: can't remove uidgid, no uidgid section exists in cluster.conf"
+      sys.exit(1)
+
+    uid = ""
+    gid = ""
+
+    for opt in options:
+	if opt.find('=') == -1:
+	    print "Error: --rmuidgid options must be of the form uid=<uid> gid=<gid>"
+	    sys.exit(1)
+	(k,v) = opt.split('=',1)
+	if k != "uid" and k != "gid":
+	    print "Error: --rmuidgid options must be of the form uid=<uid> gid=<gid>"
+	    sys.exit(1)
+	if k == "uid":
+	    uid = v
+	if k == "gid":
+	    gid = v
+
+    removed = False
+    for ug in uidgids:
+	if ug.getAttribute("uid") == uid and ug.getAttribute("gid") == gid:
+	    ug.parentNode.removeChild(ug)
+	    print "Removing uid=%s, gid=%s" % (uid,gid)
+	    removed = True
+	    break
+
+    if removed:
+	set_cluster_conf(dom.toxml())
+    else:
+	print "Error: unable to find uidgid with uid=%s, gid=%s" % (uid,gid)
+    	sys.exit(1)
+
 def set_rm(options):
     dom = minidom.parseString(get_cluster_conf_xml())
 
diff --git a/ricci/ccs/ccs.8 b/ricci/ccs/ccs.8
index f02a556..4f2c459 100644
--- a/ricci/ccs/ccs.8
+++ b/ricci/ccs/ccs.8
@@ -188,6 +188,10 @@ Remove heuristic specified by heurstic options
 List all of the misc options
 .IP "--settotem [totem options]
 Set totem options
+.IP "--setuidgid uid=<uid> gid=<gid>
+Set uidgid options
+.IP "--rmuidgid uid=<uid> gid=<gid>
+Remove uidgid entry matching specified uid/gid
 .IP "--setdlm [dlm options]
 Set dlm options
 .IP "--setrm [resource manager options]
diff --git a/ricci/ccs/unit_tests/fence.conf.end b/ricci/ccs/unit_tests/fence.conf.end
index f0cd9e0..b21567c 100644
--- a/ricci/ccs/unit_tests/fence.conf.end
+++ b/ricci/ccs/unit_tests/fence.conf.end
@@ -1,4 +1,4 @@
-<cluster config_version="27" name="mycluster">
+<cluster config_version="31" name="mycluster">
   <fence_daemon/>
   <clusternodes>
     <clusternode name="node1" nodeid="1">
diff --git a/ricci/ccs/unit_tests/misc.conf.end b/ricci/ccs/unit_tests/misc.conf.end
index dd21d07..e31ee31 100644
--- a/ricci/ccs/unit_tests/misc.conf.end
+++ b/ricci/ccs/unit_tests/misc.conf.end
@@ -1,4 +1,4 @@
-<cluster config_version="26" name="mycluster">
+<cluster config_version="36" name="mycluster">
   <fence_daemon override_time="c" post_fail_delay="y"/>
   <clusternodes>
     <clusternode name="node1" nodeid="1"/>
@@ -19,4 +19,10 @@
     <logging_daemon name="3" to_logfile="3"/>
     <logging_daemon name="5" to_logfile="5"/>
   </logging>
+  <uidgid gid="y" uid="x"/>
+  <uidgid gid="b" uid="a"/>
+  <uidgid uid="b"/>
+  <uidgid gid="b"/>
+  <uidgid uid="c"/>
+  <uidgid gid="c"/>
 </cluster>
diff --git a/ricci/ccs/unit_tests/unittest.pl b/ricci/ccs/unit_tests/unittest.pl
index fca12d2..aaef52b 100755
--- a/ricci/ccs/unit_tests/unittest.pl
+++ b/ricci/ccs/unit_tests/unittest.pl
@@ -113,6 +113,22 @@ sub misc_test {
   test ("$CCS -f $t --rmlogging name=4",0);
   test ("$CCS -f $t --rmlogging name=4",1);
 
+  test ("$CCS -f $t --setuidgid",1);
+  test ("$CCS -f $t --setuidgid uid=x gid=y",0);
+  test ("$CCS -f $t --setuidgid uid=a gid=b",0);
+  test ("$CCS -f $t --setuidgid uid=a gid=b",1);
+  test ("$CCS -f $t --setuidgid uid=z gid=z blah=x",1);
+  test ("$CCS -f $t --setuidgid blah=x",1);
+  test ("$CCS -f $t --setuidgid uid=a",0);
+  test ("$CCS -f $t --setuidgid gid=a",0);
+  test ("$CCS -f $t --setuidgid uid=b",0);
+  test ("$CCS -f $t --setuidgid gid=b",0);
+  test ("$CCS -f $t --setuidgid uid=c",0);
+  test ("$CCS -f $t --setuidgid gid=c",0);
+  test ("$CCS -f $t --rmuidgid uid=a",0);
+  test ("$CCS -f $t --rmuidgid gid=a",0);
+  test ("$CCS -f $t --rmuidgid",1);
+
   $retval = diff ($t,"$t.end");
   #`rm $t`;
   return $retval;
@@ -266,6 +282,7 @@ sub fence_test {
   test ("$CCS -f $t --addfenceinst fence_apc node1 badmethod port=1",1);
   test ("$CCS -f $t --rmfenceinst fence_ilo node1 node1method",0);
   test ("$CCS -f $t --rmfenceinst fence_ilo node1 node1method",1);
+  test ("$CCS -f $t --rmunfenceinst fence_ilo node1 node1method",0);
   test ("$CCS -f $t --rmunfenceinst fence_ilo node1 node1method",1);
   test ("$CCS -f $t --addunfenceinst fence_ilo node1 port=10",0);
   test ("$CCS -f $t --addunfenceinst fence_ilo node1 port=11",0);
-- 
1.8.3.1

