commit 984db5dfbcac745cd90b831a1c7d4118e2cf2b09
Author:     Chris Feist <cfeist@redhat.com>
AuthorDate: Tue Apr 5 17:08:13 2011 -0500
Commit:     Chris Feist <cfeist@redhat.com>
CommitDate: Tue Apr 5 17:08:13 2011 -0500

    Several doc fixes and --debug & --status error fixes
    
    - Fixed priority in help text.
    - Added note about chkconfig services on
    - Recognize --debug.
    - Display usage when not providing the proper number of arguments to rmsubserv
    - Fixed --status tracebacks when specifying a local file or non-cluster
    - Added more documentation on resources, services and fence devices/instances.
    - If the argument is '--help' print usage and exit.

diff --git a/ricci/ccs/ccs b/ricci/ccs/ccs
index 418658b..d35d32b 100755
--- a/ricci/ccs/ccs
+++ b/ricci/ccs/ccs
@@ -90,11 +90,12 @@ def main(argv):
       "setlogging", "addlogger","rmlogger","setmulticast","sync","addfailoverdomainnode=", "file=", "nodeid=",
       "votes=", "rmfailoverdomainnode=", "setdlm", "rmheuristic", "startall", "stopall", "activate",
       "setconf", "lsquorum", "lsfailoverdomain", "lsmisc", "checkconf", "exp=", "exprm=", "addunfenceinst=",
-      "rmunfenceinst=","ignore"])
+      "rmunfenceinst=","ignore", "debug"])
     except getopt.GetoptError:
         usage()
         sys.exit(2)
     for opt, arg in opts:
+        if arg == "--help": usage() ; sys.exit()
         if opt == ("--help"): usage() ; sys.exit()
         elif opt in ("--host","-h"):
             hostname = arg
@@ -213,7 +214,7 @@ def main(argv):
         elif opt in ("--setmulticast"): setmulticast = True; options = args
         elif opt in ("--nodeid"): nodeid = arg
         elif opt in ("--votes"): votes = arg
-        elif opt in ("-d"): debug = True
+        elif opt in ("-d","--debug"): debug = True
         elif opt in ("--exp"): exp = True; tag = arg; options = args
         elif opt in ("--exprm"): exprm = True; location = arg
 
@@ -298,7 +299,7 @@ Cluster configuration system.
       --sync            Sync config file to all nodes
       --activate        Activate config on node (use this option with --sync
                         to activate config on all nodes)
-      --debug           Display debugging information to help troubleshoot
+  -d, --debug           Display debugging information to help troubleshoot
                         connection issues with ricci
       --exp tag [location] [options]
                         Expert mode to add elements not currently defined in
@@ -314,11 +315,14 @@ Cluster Operations:
       --getversion      Get the current cluster.conf version
       --setversion <n>  Set the cluster.conf version
       --incversion      Increment the cluster.conf version by 1
-                        scp and put them in the current directory
-      --startall        Start cluster services on all nodes
-      --stopall         Stop cluster services on all nodes
+      --startall        Start cluster services on all nodes (and chkconfig
+                                                            services on)
+      --stopall         Stop cluster services on all nodes (and chkconfig
+                                                            services off)
       --start           Start cluster services on host specified with -h
+                                            (and chkconfig services on)
       --stop            Stop cluster services on host specified with -h
+                                            (and chkconfig services off)
 
 Node Operations:
       --lsnodes         List all nodes in the cluster
@@ -338,11 +342,15 @@ Fencing Operations:
       --rmmethod <method> <node>
                         Remove a fence method from a specific node
       --addfencedev <device name> [fence device options]
-                        Add fence device
+                        Add fence device. Fence devices and parameters can be
+                        found in online documentation in 'Fence Device
+                        Parameters'
       --rmfencedev <fence device name>
                         Remove fence device
       --addfenceinst <fence device name> <node> <method> [options]
-                        Add fence instance
+                        Add fence instance. Fence instance parameters can be
+                        found in online documentation in 'Fence Device
+                        Parameters'
       --rmfenceinst <fence device name> <node> <method>
                         Remove all instances of the fence device listed from
                         the given method and node
@@ -360,7 +368,7 @@ Failover Domain Operations:
                         Add failover domain
       --rmfailoverdomain <name>
                         Remove failover domain
-      --addfailoverdomainnode <failover domain> <node> [priority=xx]
+      --addfailoverdomainnode <failover domain> <node> [priority]
                         Add node to given failover domain
       --rmfailoverdomainnode <failover domain> <node>
                         Remove node from failover domain
@@ -369,7 +377,9 @@ Service Operations:
       --lsservices      List currently configured services and resources in
                         the cluster
       --addresource <resource type> [resource options] ...
-                        Add resources to the cluster
+                        Add global cluster resources to the cluster
+                        Resource types and variables can be found in the
+                        online documentation under 'HA Resource Parameters'
       --rmresource <resource type> [resource options]
                         Remove specified resource with resource options
       --addservice <servicename> [service options] ...
@@ -377,15 +387,28 @@ Service Operations:
       --rmservice <servicename>
                         Removes a service and all of its subservices
       --addsubservice <servicename> <subservice> [service options] ...
-                        Add individual sub services, if adding services within
-                        a tree, use ':' to separate elements and brackets to
-                        identify subservices of the same type
-                        Example: --addsubservice service_a nfs[1]:nfs[2]:nfs
+                        Add individual subservices, if adding child services,
+                        use ':' to separate parent and child subservices
+                        and brackets to identify subservices of the same type
+
+                        Subservice types and variables can be found in the
+                        online documentation in 'HA Resource Parameters'
+
+                        To add a nfsclient subservice as a child of the 2nd
+                        nfsclient subservice in the 'service_a' service use
+                        the following example: --addsubservice service_a \\
+                                               nfsclient[1]:nfsclient \\
+                                               ref=/test
       --rmsubservice <servicename> <subservice>
                         Removes a specific subservice specified by the
                         subservice, using ':' to separate elements and
                         brackets to identify between subservices of the
                         same type.
+                        To remove the 1st nfsclient child subservice
+                        of the 2nd nfsclient subservice in the 'service_a'
+                        service, use the following example:
+                                            --rmsubservice service_a \\
+                                            nfsclient[1]:nfsclient
 
 Quorum Operations:
       --lsquorum        List quorum options and heuristics
@@ -536,8 +559,23 @@ def get_cluster_conf():
     print xml
 
 def get_cluster_status():
+    if usefile:
+        print "Error: Can't get status on a local file"
+        sys.exit(1)
+
     xml = send_ricci_command("cluster","status")
-    xml = minidom.parseString(xml).getElementsByTagName('cluster')[0].toprettyxml(indent='  ',newl='')
+    xml = minidom.parseString(xml)
+
+    found_error = False
+    if (len(xml.getElementsByTagName('cluster')) < 1):
+        for var in xml.getElementsByTagName('var'):
+            if var.getAttribute("name") == "error_description":
+                print "Error: %s" % var.getAttribute("value")
+                found_error = True
+        if not found_error:        
+            print "Error: Did not receive valid status back"
+        sys.exit(1)
+    xml = xml.getElementsByTagName('cluster')[0].toprettyxml(indent='  ',newl='')
     print xml
 
 def sync_cluster_conf():
@@ -1232,6 +1270,10 @@ def remove_subservice(name, options):
     dom = minidom.parseString(get_cluster_conf_xml())
     serviceFound = False
 
+    if len(options) != 1:
+        usage() 
+        sys.exit(1)
+
     location = options.pop(0)
 
     # Verify that the service exists
diff --git a/ricci/ccs/ccs.8 b/ricci/ccs/ccs.8
index 0f292d0..c6a9cb8 100644
--- a/ricci/ccs/ccs.8
+++ b/ricci/ccs/ccs.8
@@ -39,7 +39,7 @@ Sync config file to all nodes
 .IP "--activate"
 Activate config on node (use this option with --sync
 to activate config on all nodes)
-.IP "--debug"
+.IP "-d, --debug"
 Display debugging information to help troubleshoot connection issues with ricci
 .IP "--exp tag [location] [options]
 Expert mode to add elements not currently defined in ccs
@@ -55,15 +55,14 @@ Get the current cluster.conf version
 Set the cluster.conf version
 .IP "--incversion
 Increment the cluster.conf version by 1
-scp and put them in the current directory
 .IP "--startall
-Start cluster services on all nodes
+Start cluster services on all nodes (and chkconfig services on)
 .IP "--stopall
-Stop cluster services on all nodes
+Stop cluster services on all nodes (and chkconfig services off)
 .IP "--start
-Start cluster services on host specified with -h
+Start cluster services on host specified with -h (and chkconfig services on)
 .IP "--stop
-Stop cluster services on host specified with -h
+Stop cluster services on host specified with -h (and chkconfig services off)
 .SS "NODE OPERATIONS"
 .IP "--lsnodes
 List all nodes in the cluster
@@ -86,11 +85,11 @@ Add a fence method to a specific node
 .IP "--rmmethod <method> <node>
 Remove a fence method from a specific node
 .IP "--addfencedev <device name> [fence device options]
-Add fence device
+Add fence device. Fence devices and parameters can be found in online documentation in 'Fence Device Parameters'
 .IP "--rmfencedev <fence device name>
 Remove fence device
 .IP "--addfenceinst <fence device name> <node> <method> [options]
-Add fence instance
+Add fence instance. Fence instance parameters can be found in online documentation in 'Fence Device Parameters'
 .IP "--rmfenceinst <fence device name> <node> <method>
 Remove all instances of the fence device listed from
 the given method and node
@@ -107,7 +106,7 @@ nodes configured in the cluster
 Add failover domain
 .IP "--rmfailoverdomain <name>
 Remove failover domain
-.IP "--addfailoverdomainnode <failover domain> <node> [priority=xx]
+.IP "--addfailoverdomainnode <failover domain> <node> [priority]
 Add node to given failover domain
 .IP "--rmfailoverdomainnode <failover domain> <node>
 Remove node from failover domain
@@ -116,7 +115,10 @@ Remove node from failover domain
 List currently configured services and resources in
 the cluster
 .IP "--addresource <resource type> [resource options] ...
-Add resources to the cluster
+Add global cluster resources to the cluster
+Resource types and variables can be found in the
+online documentation under 'HA Resource Parameters'
+
 .IP "--rmresource <resource type> [resource options]
 Remove specified resource with resource options
 .IP "--addservice <servicename> [service options] ...
@@ -124,16 +126,29 @@ Add service to cluster
 .IP "--rmservice <servicename>
 Removes a service and all of its subservices
 .IP "--addsubservice <servicename> <subservice> [service options] ...
-Add individual sub services, if adding services within
-a tree, use ':' to separate elements and brackets to
-identify subservices of the same type.
+Add individual subservices, if adding child services,
+use ':' to separate parent and child subservices
+and brackets to identify subservices of the same type
+.br
+Subservice types and variables can be found in the
+online documentation under 'HA Resource Parameters'
+.br
+To add a nfsclient subservice as a child of the 2nd
+nfsclient subservice in the 'service_a' service use
+the following example:
 .br
-Example: --addsubservice service_a nfsclient[1]:nfsclient[2]:nfsclient
+ccs <...> --addsubservice service_a nfsclient[1]:nfsclient ref=/test
 .IP "--rmsubservice <servicename> <subservice>
 Removes a specific subservice specified by the
 subservice, using ':' to separate elements and
 brackets to identify between subservices of the
 same type.
+.br
+To remove the 1st nfsclient child subservice
+of the 2nd nfsclient subservice in the 'service_a'
+service, use the following example:
+.br
+ccs <...> --rmsubservice service_a nfsclient[1]:nfsclient
 .SS "QUORUM OPERATIONS"
 .IP "--lsquorum
 List quorum options and heuristics
@@ -204,3 +219,9 @@ Chris Feist <cfeist@redhat.com>
 .BR ricci (8),
 .BR cluster.conf (5),
 .BR ccs_tool (8)
+.SH NOTES
+Fence Device Parameters
+\fIhttp://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Cluster_Administration/ap-fence-device-param-CA.html\fP
+.br
+HA Resource Parameters
+\fIhttp://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Cluster_Administration/ap-ha-resource-params-CA.html\fP
